WITH UserEmail AS (
    -- Step 1: Retrieve the email of the current user based on their username
    SELECT IndirizzoEmail
    FROM Utente
    WHERE Username = 'HiristrianGaro'
),
Friends AS (
    -- Step 2: Get all friends of the current user
    SELECT 
        CASE 
            WHEN RA.RichiedenteEmail = (SELECT IndirizzoEmail FROM UserEmail) THEN RA.RiceventeEmail
            ELSE RA.RichiedenteEmail 
        END AS FriendEmail
    FROM RichiedeAmicizia RA
    WHERE RA.Accettazione = 'Accettato'
      AND ((SELECT IndirizzoEmail FROM UserEmail) IN (RA.RichiedenteEmail, RA.RiceventeEmail))
),
MutualFriends AS (
    -- Step 3: Find mutual friends (shared friends) between the current user's friends and other users
    SELECT 
        CASE 
            WHEN RA.RichiedenteEmail != F.FriendEmail THEN RA.RichiedenteEmail
            ELSE RA.RiceventeEmail
        END AS SuggestedFriend,
        F.FriendEmail AS MutualFriend
    FROM Friends F
    JOIN RichiedeAmicizia RA 
        ON (F.FriendEmail = RA.RichiedenteEmail OR F.FriendEmail = RA.RiceventeEmail)
    WHERE RA.Accettazione = 'Accettato'
      AND (SELECT IndirizzoEmail FROM UserEmail) NOT IN (RA.RichiedenteEmail, RA.RiceventeEmail)
),
AggregatedSuggestions AS (
    -- Step 4: Aggregate suggestions, count mutual friends, and group names
    SELECT 
        SuggestedFriend AS Username,
        COUNT(DISTINCT MutualFriend) AS FriendsCount,
        GROUP_CONCAT(DISTINCT MutualFriend) AS MutualFriends
    FROM MutualFriends
    GROUP BY SuggestedFriend
)
-- Step 5: Exclude users who are already friends
SELECT 
    ASG.Username,
    ASG.FriendsCount,
    ASG.MutualFriends
FROM AggregatedSuggestions ASG
LEFT JOIN Friends F ON ASG.Username = F.FriendEmail
WHERE F.FriendEmail IS NULL
ORDER BY ASG.FriendsCount DESC;
